## LinuxAPP.Apps.compare.yml
# Save, Compare config spec 
# Author: havembha@gmail.com,  2022-12-18
# format:
# <environment>: like Dev, Test, UAT, Prod... or All -  free form text
#   HostName: hostname in regular expression format. when current hostname match to this name, specification in section
#            override the spec in 'All' environment section
#   Items:
#    <ObjectName>: Unique name within this section, used as suffix to the file name under which the info is saved
#            Prefix used to formulate the filename of an object being saved or compared.
#            If the operaton is save, the command output or reference file will be saved with this name as prefix. 
#            If the operatoin is compare, object saved before with this name as prefix will be compared with current value.
#            ObjectName needs to be unique across yml file. Duplicate not allowed by yml syntax.
#        Command: - If the operation is save, gather environment details using this command and save the content with <ObjectName>
#            If the operation is compare, gather current environment details using this command and compare to previously 
#                saved content with <ObjectName>
#            Only commands listed in JAAllowedCommands.yml are allowed. 
#            On windows, these commands are executed via powershell, whose base path is defined in environment spec file
#               via the parameter 'CommandShell'
#            For a given object name, either Command or FileNames can be specified.
#               If both are specified, Command definition takes precedence.
#        CompareType: optional - Checksum, checksum, Text or text 
#             Specify Checksum to compare binary files or any files where text comparison is not needed.
#             If not specified, 
#                On Unix/Linux hosts, it uses 'file' command to determin the file type.
#                On Windows, file type defined in environment spec file via the parameter 'BinaryFileTypes' is used
#                For binary files, defaults to Checksum
#                For ASCII text, defaults to Text 
#        ComparePatterns: optional parameter to check the presence of values in file - output of command stored as file 
#             of in specified file under FileNames. Can be used to check for environment specific values in command output.
#             { 'regex pattern1': { groupX: valueX, groupY: valueY,...}, 'regex pattern2': { groupM: valueM, groupN: valueN,...} }
#             Group number is integer value starting with 1. Group 1 for first group matched, aligns with group numbers shown in regex101.com
#             Value can be number (integer, float) or string. Put string values within single quote ('') or double quote ("")
#             Recommand to use https://regex101.com/ to test the regex patterns, group numbers, values to ensure the spec is accurate
#             Value can also be variable name which can have different values for different environment.
#             variable needs to have single quote or doublequote before {{ and after }} so that YAML spec format is followed
#             Example use: file system size expected is different for test and prod environments. 
#                          number of CPUs provisioned is different for test and prod envionments.
#             Refer to examples to understand the usage possibilities.
#        FileNames: file names in CSV form or find command that returns file names in multiple lines
#            Each file name is suffixed with NameSuffix.
#            If operation is save, save the contents of the files with <objectName>.<fileName> without the path name.
#            If operation is compare, current file is compared to saved file.
#            For a given object name, either Command or FileNames can be specified, NOT both.
#            On Linux/Unix host, if the first word is 'find', it will execute the comamnd and work all files names
#               returned in the command response
#            On Windows host, if the first word is 'get-childitem', it will execute the comamnd and work all files names
#               returned in the command response
#        IgnorePatterns: [ 'pattern1', 'pattern2'...] - pattern in regular expression format
#           while doing host to host comparison between two different hosts, first the text line is translated by removing these patterns from a line,
#             resulting lines are written to a temporary file and after that difference is evaluated between the files. 
#             Include this to ingore IP address or hostname that can change from one host to another
#        SkipH2H: optional - Yes, YES, NO or No 
#            Skip this file from upload/download actions, keep the file on local host only.
#            Suggest to use this option to keep any sensitive information on local host only, not to upload to SCM.
#            Also, use this when the object or file is application to this host only like certificate        
#            Default - No
# Suggestion: Even though any unique name can be used for <objectName>, it is better to start it with 
#   AppsCode prefix for objects pertaining to application code 
#   AppsConfig prefix for objects pertaining to application confiugration
#   AppsCmd prefix for objects to save command output
#   <subsystem>Code, <subsystem>Config, <subsystem>Cmd if a component has more than one subsystem to differentiate the
#       object name under which the environment will be saved in saveDirectory.
#       <subsystem> can be DB for database related objects, OS for OS related objects.
#
#   Specify common items under 'All' so that it applies to hosts in all environments.
#     Specify environment specific items under Dev, Test, UAT, Prod... 
#     If an item with the same name and same command/filename is specified under 'All', 
#       one specified under other environment takes precedence.
#
Dev:
  # specify hostname in regular expression 
  HostName: (LAPTOP-QOCNVF0T)
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
      SkipH2H: Yes
Test:
  # specify hostname in regular expression 
  HostName: (...)(t)(...)([0-9][0-9])|(havembha)
  Variable:
    ### environment specific file system size for file system /run and /boot/efi
    ### this variable is used to define expected value of group under the item 'OSCmdFileSystem' under All environment
    ###   this variable value are substitued to ComparePatterns conditions before matching to current value
    ###
    SizeOfFSRun: echo 787
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
      SkipH2H: Yes
UAT:
  HostName: (...)(u)(...)([0-9][0-9])
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
      SkipH2H: Yes
Prod:
  HostName: (...)(p)(...)([0-9][0-9])
  Variable:
    ### environment specific file system size for file system /run and /boot/efi
    ### this variable is used to define expected value of group under the item 'OSCmdFileSystem' under All environment
    ###   this variable value are substitued to ComparePatterns conditions before matching to current value
    ###
    SizeOfFSRun: echo 1787
    ### expect 16 CPUs in prod
    NumOfCPUs: echo 16
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
      SkipH2H: Yes
All:
  Variable:
    ### default value for all environments
    ###  size of /run file system
    SizeOfFSRun: echo 1787
    ###  number of CPUs
    NumOfCPUs: echo 8
  Items:
    AppsCmdEnv:
      FileNames: $HOME/.profile, $HOME/.bashrc
    AppsCode:
      # python files under Common 
      FileNames: find /var/www/JaaduAudit/Common -name "*.py"
      CompareType: Checksum
    AppsConfigCommon:
      FileNames: find /var/www/JaaduAudit/Common -name "*.conf"
    AppsConfigCustom:
      FileNames: find /var/www/JaaduAudit/Custom -name "*.yml"
    OSCmdRelease:
      Command: cat /etc/os-release
    OSCmdFileSystem:
      ### file system name and size in MB
      Command: df -m | awk -F' ' '{print $2" "$6}'
      ### output is of the form
      # 1M-blocks Mounted
      # 787 /run      <-- check the size of this file system using pattern1 below in ComparePatterns
      # 702645 /
      # 3933 /dev/shm
      # 511 /boot/efi <-- check the size of this file system using pattern2 below in ComparePatterns
      # 787 /run/user/1000 
      ### expect size of /run to be SizeOfFSRun, /boot/efi size to be 511
      ComparePatterns: { '(\d+)(\s+)(/run)': { 1: '{{ SizeOfFSRun }}' }, '(\d+)(\s+)(/boot/efi)': { 1: 511 } }
      #                  ^^^^^^^^^^^^^^^^  <--- pattern 1
      #                                                   ^^^^^^^^^^^^^^^^^^^^^ <-- pattern 2
      #                                             ^^^^^^^^^^^^^^^  <-- SizeOfFSRun variable was defined under Test and Prod
      # environments to have diff values. Those are substituted before comparing to current value seen on a host
    OSCmdCPUs:
      Command: cat /proc/cpuinfo | grep -c '^processor'
      ### expected output in the form
      ### 8  <-- numeric value indicating number of VPUs on a host
      ### this number can vary among environments like DEV, Test, Prod.
      ### Define variable with expected value under each environment and refer to that variable below as expected value
      ComparePatterns: { '(\d+)': { 1: '{{ NumOfCPUs }}' } }
      ###                                  ^^^^^^^^^   <--- variable values defined under respective environments