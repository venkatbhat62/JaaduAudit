# connectivity test spec 
# Author: havembha@gmail.com,  2022-12-10
# Format
# Variable: typically used to derive local site partial name to formulate local site hostnames for local components
# - Name:  free form name, needs to be unique within this spec file
# - Value: output of a command assigned to this variable
#
# Services:
# - Name: ServiceName
#   Command: run command to gather currnet state of the process like "ps -ef|grep <processName>" in Linux or
#             get-process -name <processName> in windows
#             to check whether a process is running before doing connection check to listen port on local host
#           Optional parameters, default None
#   Condition: <number> - if above command results in a number greater than or equal to the given <number>
#         connectivity check will be performed, else it will be skipped.
#           Optional parameters, default None
#   HostNames: destination hostname in short form or in FQDN form, can be IP address also. Can be single or in CSV format
#         destination hostname can be localhost, in which case the connectivity to local port is verified. 
#         This is be useful to check the local process listening in on expected LISTEN port
#         If more then one hostname is specified via CSV, connectivity check is performed for to all those hosts
#           for each of the ports specified under Ports.
#         can use variable names like {{var1}} or {{var2}}<partialName>,{{var2}}<partialName>
#             value of variable will be substitued to form full hostname
#   Ports: single port or ports in CSV format, or port range like startingPort-(dash)-endingPort
#          if more than one port is specified or range is specified, connectivity is checked to all those ports
#            from current host to destination host
#   Protocol: TCP|UDP
#         If UDP, it will send UDP packets, so that one can check the receipt of packets on other end manually or using other tools
#           UDP does not provide any conclusive test results
#         Optional parameter, defaults to TCP
#
Dev:
  # specify hostname in regular expression 
  HostName: (LAPTOP-QOCNVF0T)
  Variable:
    Var1: echo "microsoft.com"
    ### separated the length with space so that first part of the command matach to the allowed command for windows
    Var2: (hostname).substring( 5)
    Var3: echo "-QOCNVF0T"
  Services:
    XperConnectBroker:
      Command: get-nettcpconnection -localport 6000
      Condition: 2
      HostNames: localhost
      Ports: 6000
    SCMWebServer:
      HostNames: 192.168.1.169
      Ports: 443
Test:
  # specify hostname in regular expression 
  HostName: ((...)(t)(...)([0-9][0-9]))
UAT:
  # specify hostname in regular expression 
  HostName: ((...)(u)(...)([0-9][0-9]))
Prod:
  # specify hostname in regular expression 
  HostName: ((...)(p)(...)([0-9][0-9]))
#
# Keep definition for 'All' environment at the end.
# this is to ensure, Dev, Test, UAT, Prod etc environment specific values are seen/read first and 
# assigned to variables. If a variable is not yet defined under Dev, Test.. like environment,
# and that variable is defined under 'All', value under 'All' will be picked up
# if variable is already defined under environment before, value under 'All' will be ignored.
All:
  Variable:
    Var1: echo "google.com"
    ### separated the length with space so that first part of the command matach to the allowed command for windows
    Var2: (hostname).substring( 5 )
    Var3: echo "-QOCNVF0T"
  #
  Services:
    XperConnectBroker:
      Command: get-nettcpconnection -localport 6000
      Condition: 2
      Environment: Dev
      HostNames: localhost
      Ports: 6000
    SMB:
      Command: get-nettcpconnection -localport 445
      Condition: 2
      HostNames: localhost
      Ports: 445
    InternetAccess:
      HostNames: google.com,microsoft.com
      Ports: 80,443
    PartialSuccess:
      HostNames: google.com,microsoft.com
      Ports: 80-81
    VariableGoogle:
      HostNames: ${{ Var1 }}
      Ports: 443
    VariableLocalHost:
      HostNames: ${{ Var2 }}${{ Var3 }}
      Ports: 6000