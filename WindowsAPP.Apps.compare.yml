## WindowsAPP.Apps.compare.yml
# Save, Compare config spec 
# Author: havembha@gmail.com,  2022-11-24
# format:
# <environment>: like Dev, Test, UAT, Prod... or All -  free form text
#   HostName: hostname in regular expression format. when current hostname match to this name, specification in section
#            override the spec in 'All' environment section
#   Items:
#    <ObjectName>: Unique name within this section, used as suffix to the file name under which the info is saved
#            Prefix used to formulate the filename of an object being saved or compared.
#            If the operaton is save, the command output or reference file will be saved with this name as prefix. 
#            If the operatoin is compare, object saved before with this name as prefix will be compared with current value.
#            ObjectName needs to be unique across yml file. Duplicate not allowed by yml syntax.
#        Command: - If the operation is save, gather environment details using this command and save the content with <ObjectName>
#            If the operation is compare, gather current environment details using this command and compare to previously 
#                saved content with <ObjectName>
#            Only commands listed in JAAllowedCommands.yml are allowed. 
#            On windows, these commands are executed via powershell, whose base path is defined in environment spec file
#               via the parameter 'CommandShell'
#            For a given object name, either Command or FileNames can be specified.
#               If both are specified, Command definition takes precedence.
#        CompareType: optional - Checksum, checksum, Text or text 
#             Specify Checksum to compare binary files or any files where text comparison is not needed.
#             If not specified, 
#                On Unix/Linux hosts, it uses 'file' command to determin the file type.
#                On Windows, file type defined in environment spec file via the parameter 'BinaryFileTypes' is used
#                For binary files, defaults to Checksum
#                For ASCII text, defaults to Text 
#        FileNames: file names in CSV form or find command that returns file names in multiple lines
#            Each file name is suffixed with NameSuffix.
#            If operation is save, save the contents of the files with <objectName>.<fileName> without the path name.
#            If operation is compare, current file is compared to saved file.
#            For a given object name, either Command or FileNames can be specified, NOT both.
#            On Linux/Unix host, if the first word is 'find', it will execute the comamnd and work all files names
#               returned in the command response
#            On Windows host, if the first word is 'get-childitem', it will execute the comamnd and work all files names
#               returned in the command response
#        ComparePatterns: optional parameter to check the presence of values in file - output of command stored as file 
#             of in specified file under FileNames. Can be used to check for environment specific values in command output.
#             { 'regex pattern1': { groupX: valueX, groupY: valueY,...}, 'regex pattern2': { groupM: valueM, groupN: valueN,...} }
#             Group number is integer value starting with 1. Group 1 for first group matched, aligns with group numbers shown in regex101.com
#             Value can be number (integer, float) or string. Put string values within single quote ('') or double quote ("")
#             Recommand to use https://regex101.com/ to test the regex patterns, group numbers, values to ensure the spec is accurate
#             Value can also be variable name which can have different values for different environment.
#             variable needs to have single quote or doublequote before {{ and after }} so that YAML spec format is followed
#             Example use: file system size expected is different for test and prod environments. 
#                          number of CPUs provisioned is different for test and prod envionments.
#             Refer to examples to understand the usage possibilities.
#               
#        IgnorePatterns: [ 'pattern1', 'pattern2'...] - pattern in regular expression format
#           while doing host to host comparison between two different hosts, first the text line is translated by removing these patterns from a line,
#             resulting lines are written to a temporary file and after that difference is evaluated between the files. 
#             Include this to ingore IP address or hostname that can change from one host to another
#        SkipH2H: optional - Yes, YES, NO or No 
#            Skip this file from upload/download actions, keep the file on local host only.
#            Suggest to use this option to keep any sensitive information on local host only, not to upload to SCM.
#            Also, use this when the object or file is application to this host only like certificate        
#            Default - No
# Suggestion: Even though any unique name can be used for <objectName>, it is better to start it with 
#   AppsCode prefix for objects pertaining to application code 
#   AppsConfig prefix for objects pertaining to application confiugration
#   AppsCmd prefix for objects to save command output
#   <subsystem>Code, <subsystem>Config, <subsystem>Cmd if a component has more than one subsystem to differentiate the
#       object name under which the environment will be saved in saveDirectory.
#       <subsystem> can be DB for database related objects, OS for OS related objects.
#
#   Specify common items under 'All' so that it applies to hosts in all environments.
#     Specify environment specific items under Dev, Test, UAT, Prod... 
#     If an item with the same name and same command/filename is specified under 'All', 
#       one specified under other environment takes precedence.
Dev:
  # specify hostname in regular expression 
  HostName: (LAPTOP-QOCNVF0T)
  Variable:
    WindowsRelease: echo "10.0.22000"

  Items:
    AppsCmdFirewall:
      Command: get-netfirewallrule
      SkipH2H: Yes
Test:
  # specify hostname in regular expression 
  HostName: (...)(t)(...)([0-9][0-9])|(havembha)
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
UAT:
  # specify hostname in regular expression 
  HostName: (...)(u)(...)([0-9][0-9])
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
Prod:
  # specify hostname in regular expression 
  HostName: (...)(p)(...)([0-9][0-9])
  Items:
    OSIptables:
      Command: sudo /usr/sbin/iptables -L
All:
  Variable:
    WindowsRelease: echo "10.0.22000"
  Items:
    AppsCode:
      # python files under Common 
      # need to specify full path while referring to files (powershell defaults to home directory)
      # Use "Select-object -expandproperty fullname" to get pathname and filename
      FileNames: get-childitem C:\Users\${username}\documents\github\JaaduAuditLocalRepository/Common -Filter "*.py" | Select-object -expandproperty fullname
      CompareType: Checksum
    AppsConfig:
      # need to specify full path while referring to files (powershell defaults to home directory)
      FileNames: C:\Users\${username}\documents\github\JaaduAuditLocalRepository/Custom/JAEnvironment.yml, C:\Users\${username}\documents\github\JaaduAuditLocalRepository/Custom/WindowsAPP.Apps.compare.yml
    AppsCmdEnv:
      ### take a snapshot of current environment
      Command: 'Get-ChildItem -Path Env:'
    OSCmdRelease:
      Command: Get-WMIObject win32_operatingsystem
      ### Version         : 10.0.22000
      ###  1         2        3         <--- group numbers
      ComparePatterns: { '(Version)(.*): (.+)': { 3: "{{ WindowsRelease }}" } }
      ###                                                ^^^^^^^^^^^^^^ <-- using variable name, whose value will be replaced here
      ###                                                                     before comparing to current environment
      ### This variable value can be set for diff environment so that expected value is different for diff environment
      ### variable needs to have single quote or doublequote before {{ and after }} so that YAML spec format is followed
    OSCmdFileSystem:
      ### this will be executed using powershell
      Command: Get-CimInstance Win32_LogicalDisk | select-object deviceid,drivetype,volumename,size
      ###  C:               3 Windows-SSD 510770802688
      ###  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      ###   1               2 3 4        5    6        <-- group number to be used in match condition, using index starting from 1
      ComparePatterns: { '(.*)(\d+)(\s+)(.+)(\s+)(\d+)': { 2: 3, 4: "Windows-SSD" } }
      ###                <-- pattern 1 -------------->   <conditions for pattern 1>
      ###                                                  2: 3 <-- expect a value of 3 for group 2
      ###                                                        4: "Windows-SSD"  <-- expect a value of "Windows-SSD" for group 4
    OSCmdIPInfo:
      Command: ipconfig
      ### ignore IPV6  parameters
      IgnorePatterns: [  '(\s+)Temporary IPv6 Address(.*)', '(\s+)Link-local IPv6 Address(.*)', '(\s+)IPv6 Address(.*)' ]
